# Don't forget to set the following variables for your (release) pipeline: ghcr.user, ghcr.password
    
trigger:
- main
- develop
- feature/*

variables:
  - name: isRelease
    value: $[eq(variables['Build.SourceBranchName'], 'main')]
  - name: isDevelop
    value: $[eq(variables['Build.SourceBranchName'], 'develop')]
  - name: docker.image.prefix
    value: ghcr.io/bechtleav360
  - name: docker.image.name
    value: maverick-entity-graph
  - name: docker.image.version
    value: develop
  - name: docker.host
    value: https://ghcr.io
  - name: docker.credentials.user
  - name: docker.credentials.password


stages:
  - stage: Building
    jobs:
      - job: Testing
      #  pool:
      #    vmImage: ubuntu-latest
        steps:
          - task: Maven@3
            displayName: Run unit tests
            inputs:
              mavenPomFile: 'pom.xml'
              goals: 'test'
              publishJUnitResults: true
              testResultsFiles: '**/surefire-reports/TEST-*.xml'
              javaHomeOption: 'JDKVersion'
              jdkVersionOption: 1.17
              jdkArchitectureOption: x64
              mavenVersionOption: 'Default'
              mavenAuthenticateFeed: false
              effectivePomSkip: false
              sonarQubeRunAnalysis: false
  - stage: Publishing
    dependsOn: Building
    jobs:
      - job: Pushing
        pool:
          vmImage: ubuntu-latest
        steps:
          - script: echo "Publishing image with build number $(Build.BuildNumber) and name $(privateRegistry)/$(containerRepo)"
          - task: Maven@3
            displayName: Compile and package
            inputs:
              mavenPomFile: 'pom.xml'
              goals: 'install'
              javaHomeOption: 'JDKVersion'
              jdkVersionOption: 1.17
              jdkArchitectureOption: x64
              mavenVersionOption: 'Default'
              mavenAuthenticateFeed: false
              effectivePomSkip: false
              sonarQubeRunAnalysis: false
              options: '-DskipTests=true'
          - task: Maven@3
            displayName: Publish Docker Image to Container Registry
            env:
              IMAGE_PREFIX: $(docker.image.prefix)
              IMAGE_NAME: $(docker.image.name)
              IMAGE_VERSION: $(Build.SourceBranchName)
              DOCKER_HOST: $(docker.host)
              DOCKER_USER: $(docker.credentials.user)
              DOCKER_PASSWORD: $(docker.credentials.password)
            inputs:
              mavenPomFile: 'maverick.graph.main/pom.xml'
              goals: 'spring-boot:build-image'
              publishJUnitResults: true
              jdkVersionOption: 1.17